{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PietroBorc\\\\Desktop\\\\Progetto1\\\\esercizio1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_HOST = \"http://localhost:3000\";\nconst INVENTORY_API_URL = `${API_HOST}/frutti`;\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const fetchInventory = () => {\n    fetch(`${INVENTORY_API_URL}`).then(res => res.json()).then(json => setData(json));\n  };\n\n  useEffect(() => {\n    fetchInventory();\n  }, []);\n  /**\n   *\n   * @param id\n   * @param newUnitPrice\n   */\n\n  const updateInventory = ({\n    id,\n    newUnitPrice\n  }) => {\n    fetch(`${INVENTORY_API_URL}/${id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        unit_price: newUnitPrice\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(json => {\n      // reset inEditMode and unit price state values\n      onCancel(); // fetch the updated data\n\n      fetchInventory();\n    });\n  };\n  /**\n   *\n   * @param id -The id of the product\n   * @param newUnitPrice - The new unit price of the product\n   */\n\n\n  const onSave = ({\n    id,\n    newUnitPrice\n  }) => {\n    updateInventory({\n      id,\n      newUnitPrice\n    });\n  };\n\n  const onCancel = () => {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null\n    }); // reset the unit price state value\n\n    setUnitPrice(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      width: \"800px\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descrizione Prodotto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Prezzo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stato\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Azioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              width: \"60px\",\n              height: \"40px\",\n              src: item.imageSrc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.qta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [item.prezzo, \"\\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.qta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"cancella\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PietroBorc/Desktop/Progetto1/esercizio1/src/App.js"],"names":["React","useEffect","useState","API_HOST","INVENTORY_API_URL","App","data","setData","fetchInventory","fetch","then","res","json","updateInventory","id","newUnitPrice","method","body","JSON","stringify","unit_price","headers","response","onCancel","onSave","setInEditMode","status","rowKey","setUnitPrice","map","item","imageSrc","name","qta","prezzo"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nconst API_HOST = \"http://localhost:3000\";\nconst INVENTORY_API_URL = `${API_HOST}/frutti`;\n\nfunction App() {\n    const [data, setData] = useState([]);\n\n    const fetchInventory = () => {\n        fetch(`${INVENTORY_API_URL}`)\n            .then(res => res.json())\n            .then(json => setData(json));\n    }\n\n    useEffect(() => {\n        fetchInventory();\n    }, []);\n\n \n    \n\n    /**\n     *\n     * @param id\n     * @param newUnitPrice\n     */\n    const updateInventory = ({id, newUnitPrice}) => {\n        fetch(`${INVENTORY_API_URL}/${id}`, {\n            method: \"PATCH\",\n            body: JSON.stringify({\n                unit_price: newUnitPrice\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n            .then(response => response.json())\n            .then(json => {\n                // reset inEditMode and unit price state values\n                onCancel();\n\n                // fetch the updated data\n                fetchInventory();\n            })\n    }\n\n    /**\n     *\n     * @param id -The id of the product\n     * @param newUnitPrice - The new unit price of the product\n     */\n    const onSave = ({id, newUnitPrice}) => {\n        updateInventory({id, newUnitPrice});\n    }\n\n    const onCancel = () => {\n        // reset the inEditMode state value\n        setInEditMode({\n            status: false,\n            rowKey: null\n        })\n        // reset the unit price state value\n        setUnitPrice(null);\n    }\n\n    return (\n      <div  className=\"container\">\n            \n      <table width=\"800px\" >\n          <thead>\n            <tr>\n                <th></th>\n                <th>Descrizione Prodotto</th>\n                <th>Qta</th>\n                <th>Prezzo</th>\n                <th>Stato</th>\n                <th>Azioni</th>\n            </tr>\n          </thead>\n          <tbody>\n\n          \n                {\n                        data.map((item) => (\n                            <tr key={item.id}>\n                                <td ><img width=\"60px\" height=\"40px\" src={item.imageSrc}/></td>\n                                <td>{item.name}</td>\n                                <td>{item.qta}</td>\n                                <td>{item.prezzo}€</td>\n                                <td>{item.qta}</td>\n                                <td><button>cancella</button></td>                                      \n                                <td/>\n                            </tr>\n                        ))\n                    }\n          </tbody>\n      </table>\n    </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}